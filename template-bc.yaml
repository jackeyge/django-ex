apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "jenkins", "namespace": "", "kind": "DeploymentConfig"}]'
  labels:
    app: django-ex-noredis-pipeline
    group: django-ex-noredis
    name: django-ex-noredis-pipeline
    template: django-psql-example
  name: django-ex-noredis-pipeline
  namespace: gxytest-jenkins
spec:
  nodeSelector: {}
  output: {}
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    type: None
  strategy:
    jenkinsPipelineStrategy:
      env:
        - name: DEV_PROJECT
          value: dev
        - name: STAGE_PROJECT
          value: stage
        - name: WITH_SONAR
          value: 'true'
        - name: JENKINS_JNLP_URL
          value: 'http://jenkins/computer/jenkins-python-3rq41/slave-agent.jnlp'
        - name: JENKINS_URL
          value: 'http://jenkins/'
      jenkinsfile: |-

        pipeline {
          agent {
            label 'jenkins-python2'
          }
          stages {
            stage('Test') {
              steps {
                git branch: 'dev', url: 'https://github.com/jackeyge/django-ex.git'
                sh "nosetests tests/authentication_tests.py  --with-xunit --all-modules --traverse-namespace --with-coverage --cover-package=project1 --cover-inclusive"
                sh "python -m coverage xml --include=project1*"
                // sh "pylint -f parseable -d I0011,R0801 project1 | tee pylint.out"
              }
            }
            stage ('build'){
                
              steps {
                 openshiftBuild(bldCfg: 'django-ex-noredis', showBuildLogs: 'true')
            }    
            }
            stage ('deploy'){
              steps {
                openshiftDeploy(depCfg: 'django-ex-noredis')
              }}
          }
          
        post {
        always {
                junit 'nosetests.xml'
                cobertura coberturaReportFile: 'coverage.xml'
        }
        }
        }
    type: JenkinsPipeline
  triggers:
    - github:
        secret: password
      type: GitHub
    - generic:
        secret: password
      type: Generic

